/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package csc428_p2;

import java.awt.Color;
import javax.swing.JOptionPane;

/**
 *
 * @author Ignacio
 */
public class JApplyRecording extends javax.swing.JInternalFrame {

    private JInternalPPT parent;
    private int order;
    private int slidesAdded;
    private String[] selections;
    private boolean catSelected;
    private boolean dogSelected;
    private boolean birdSelected;
    private boolean rabbitSelected;
    private boolean fishSelected;
    private boolean turtleSelected;
    
    /**
     * Creates new form JApplyRecording
     * @param parent - the parent frame
     * @param order - determines whether the insertion or adding the slide came
     *      first; 1 if it was image insertion and 2 if it was adding the slide
     * @param slidesAdded - the number of frames added
     * 
     */
    public JApplyRecording(JInternalPPT parent, int order, int slidesAdded) {
        this.parent = parent;
        this.order = order;
        this.slidesAdded = slidesAdded;
        selections = new String[6];
        catSelected = false;
        dogSelected = false;
        birdSelected = false;
        rabbitSelected = false;
        fishSelected = false;
        turtleSelected = false;
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlApply = new javax.swing.JPanel();
        lblConfirmImages = new javax.swing.JLabel();
        btnApply = new javax.swing.JButton();
        btnCancel = new javax.swing.JButton();
        pnlApplyCat = new javax.swing.JPanel();
        btnSelectCat = new javax.swing.JButton();
        lblCatTitle = new javax.swing.JLabel();
        lblSidebar = new javax.swing.JLabel();
        pnlApplyDog = new javax.swing.JPanel();
        btnSelectDog = new javax.swing.JButton();
        lblDogTitle = new javax.swing.JLabel();
        pnlApplyBird = new javax.swing.JPanel();
        btnInsertBird = new javax.swing.JButton();
        lblBirdTitle = new javax.swing.JLabel();
        pnlApplyRabbit = new javax.swing.JPanel();
        btnSelectRabbit = new javax.swing.JButton();
        lblRabbitTitle = new javax.swing.JLabel();
        pnlApplyFish = new javax.swing.JPanel();
        btnSelectFish = new javax.swing.JButton();
        lblFishTitle = new javax.swing.JLabel();
        pnlApplyTurtle = new javax.swing.JPanel();
        btnSelectTurtle = new javax.swing.JButton();
        lblTurtleTitle = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 255));
        setResizable(true);

        pnlApply.setBackground(new java.awt.Color(255, 255, 255));

        lblConfirmImages.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        lblConfirmImages.setText("Select images to apply recording:");

        btnApply.setFont(new java.awt.Font("Tahoma", 0, 39)); // NOI18N
        btnApply.setText("Apply");
        btnApply.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnApplyActionPerformed(evt);
            }
        });

        btnCancel.setFont(new java.awt.Font("Tahoma", 0, 39)); // NOI18N
        btnCancel.setText("Cancel");
        btnCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelActionPerformed(evt);
            }
        });

        pnlApplyCat.setBackground(new java.awt.Color(255, 255, 255));

        btnSelectCat.setIcon(new javax.swing.ImageIcon(getClass().getResource("/csc428_p2/image/cat_thumbnail.png"))); // NOI18N
        btnSelectCat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSelectCatActionPerformed(evt);
            }
        });

        lblCatTitle.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        lblCatTitle.setText("cat.jpg");

        javax.swing.GroupLayout pnlApplyCatLayout = new javax.swing.GroupLayout(pnlApplyCat);
        pnlApplyCat.setLayout(pnlApplyCatLayout);
        pnlApplyCatLayout.setHorizontalGroup(
            pnlApplyCatLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlApplyCatLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlApplyCatLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnSelectCat, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblCatTitle))
                .addContainerGap(44, Short.MAX_VALUE))
        );
        pnlApplyCatLayout.setVerticalGroup(
            pnlApplyCatLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlApplyCatLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnSelectCat, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblCatTitle)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        lblSidebar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/csc428_p2/image/InsertSidebar.png"))); // NOI18N

        pnlApplyDog.setBackground(new java.awt.Color(255, 255, 255));

        btnSelectDog.setIcon(new javax.swing.ImageIcon(getClass().getResource("/csc428_p2/image/dog_thumbnail.png"))); // NOI18N
        btnSelectDog.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSelectDogActionPerformed(evt);
            }
        });

        lblDogTitle.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        lblDogTitle.setText("dog.jpg");

        javax.swing.GroupLayout pnlApplyDogLayout = new javax.swing.GroupLayout(pnlApplyDog);
        pnlApplyDog.setLayout(pnlApplyDogLayout);
        pnlApplyDogLayout.setHorizontalGroup(
            pnlApplyDogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlApplyDogLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlApplyDogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblDogTitle)
                    .addGroup(pnlApplyDogLayout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(btnSelectDog, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(40, Short.MAX_VALUE))
        );
        pnlApplyDogLayout.setVerticalGroup(
            pnlApplyDogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlApplyDogLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnSelectDog, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblDogTitle)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pnlApplyBird.setBackground(new java.awt.Color(255, 255, 255));

        btnInsertBird.setIcon(new javax.swing.ImageIcon(getClass().getResource("/csc428_p2/image/bird_thumbnail.png"))); // NOI18N
        btnInsertBird.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnInsertBirdActionPerformed(evt);
            }
        });

        lblBirdTitle.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        lblBirdTitle.setText("bird.jpg");

        javax.swing.GroupLayout pnlApplyBirdLayout = new javax.swing.GroupLayout(pnlApplyBird);
        pnlApplyBird.setLayout(pnlApplyBirdLayout);
        pnlApplyBirdLayout.setHorizontalGroup(
            pnlApplyBirdLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlApplyBirdLayout.createSequentialGroup()
                .addGroup(pnlApplyBirdLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlApplyBirdLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(btnInsertBird, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pnlApplyBirdLayout.createSequentialGroup()
                        .addGap(39, 39, 39)
                        .addComponent(lblBirdTitle)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pnlApplyBirdLayout.setVerticalGroup(
            pnlApplyBirdLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlApplyBirdLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnInsertBird, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblBirdTitle)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pnlApplyRabbit.setBackground(new java.awt.Color(255, 255, 255));

        btnSelectRabbit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/csc428_p2/image/rabbit_thumbnail.png"))); // NOI18N
        btnSelectRabbit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSelectRabbitActionPerformed(evt);
            }
        });

        lblRabbitTitle.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        lblRabbitTitle.setText("rabbit.jpg");

        javax.swing.GroupLayout pnlApplyRabbitLayout = new javax.swing.GroupLayout(pnlApplyRabbit);
        pnlApplyRabbit.setLayout(pnlApplyRabbitLayout);
        pnlApplyRabbitLayout.setHorizontalGroup(
            pnlApplyRabbitLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlApplyRabbitLayout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addComponent(lblRabbitTitle)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlApplyRabbitLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnSelectRabbit, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(57, 57, 57))
        );
        pnlApplyRabbitLayout.setVerticalGroup(
            pnlApplyRabbitLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlApplyRabbitLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnSelectRabbit, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblRabbitTitle)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pnlApplyFish.setBackground(new java.awt.Color(255, 255, 255));

        btnSelectFish.setIcon(new javax.swing.ImageIcon(getClass().getResource("/csc428_p2/image/fish_thumbnail.png"))); // NOI18N
        btnSelectFish.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSelectFishActionPerformed(evt);
            }
        });

        lblFishTitle.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        lblFishTitle.setText("fish.jpg");

        javax.swing.GroupLayout pnlApplyFishLayout = new javax.swing.GroupLayout(pnlApplyFish);
        pnlApplyFish.setLayout(pnlApplyFishLayout);
        pnlApplyFishLayout.setHorizontalGroup(
            pnlApplyFishLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlApplyFishLayout.createSequentialGroup()
                .addContainerGap(41, Short.MAX_VALUE)
                .addGroup(pnlApplyFishLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblFishTitle)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlApplyFishLayout.createSequentialGroup()
                        .addComponent(btnSelectFish, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(9, 9, 9)))
                .addContainerGap())
        );
        pnlApplyFishLayout.setVerticalGroup(
            pnlApplyFishLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlApplyFishLayout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addComponent(btnSelectFish, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblFishTitle)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pnlApplyTurtle.setBackground(new java.awt.Color(255, 255, 255));

        btnSelectTurtle.setIcon(new javax.swing.ImageIcon(getClass().getResource("/csc428_p2/image/turtle_thumbnail.png"))); // NOI18N
        btnSelectTurtle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSelectTurtleActionPerformed(evt);
            }
        });

        lblTurtleTitle.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        lblTurtleTitle.setText("turtle.jpg");

        javax.swing.GroupLayout pnlApplyTurtleLayout = new javax.swing.GroupLayout(pnlApplyTurtle);
        pnlApplyTurtle.setLayout(pnlApplyTurtleLayout);
        pnlApplyTurtleLayout.setHorizontalGroup(
            pnlApplyTurtleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlApplyTurtleLayout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addComponent(lblTurtleTitle)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlApplyTurtleLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnSelectTurtle, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(46, 46, 46))
        );
        pnlApplyTurtleLayout.setVerticalGroup(
            pnlApplyTurtleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlApplyTurtleLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnSelectTurtle, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblTurtleTitle)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout pnlApplyLayout = new javax.swing.GroupLayout(pnlApply);
        pnlApply.setLayout(pnlApplyLayout);
        pnlApplyLayout.setHorizontalGroup(
            pnlApplyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlApplyLayout.createSequentialGroup()
                .addContainerGap(437, Short.MAX_VALUE)
                .addGroup(pnlApplyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btnCancel)
                    .addGroup(pnlApplyLayout.createSequentialGroup()
                        .addGroup(pnlApplyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(pnlApplyRabbit, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(pnlApplyCat, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(79, 79, 79)
                        .addGroup(pnlApplyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlApplyLayout.createSequentialGroup()
                                .addComponent(pnlApplyDog, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(65, 65, 65)
                                .addComponent(pnlApplyBird, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlApplyLayout.createSequentialGroup()
                                .addComponent(pnlApplyFish, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(58, 58, 58)
                                .addComponent(pnlApplyTurtle, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnApply)
                .addContainerGap())
            .addGroup(pnlApplyLayout.createSequentialGroup()
                .addGap(245, 245, 245)
                .addComponent(lblConfirmImages)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(pnlApplyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(pnlApplyLayout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(lblSidebar)
                    .addContainerGap(1083, Short.MAX_VALUE)))
        );
        pnlApplyLayout.setVerticalGroup(
            pnlApplyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlApplyLayout.createSequentialGroup()
                .addGap(71, 71, 71)
                .addComponent(lblConfirmImages)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 109, Short.MAX_VALUE)
                .addGroup(pnlApplyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlApplyLayout.createSequentialGroup()
                        .addGroup(pnlApplyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(pnlApplyBird, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(pnlApplyDog, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(pnlApplyCat, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(pnlApplyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pnlApplyLayout.createSequentialGroup()
                                .addGap(80, 80, 80)
                                .addComponent(pnlApplyTurtle, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(pnlApplyLayout.createSequentialGroup()
                                .addGap(74, 74, 74)
                                .addComponent(pnlApplyRabbit, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addComponent(pnlApplyFish, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(111, 111, 111)
                .addGroup(pnlApplyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnCancel)
                    .addComponent(btnApply))
                .addContainerGap())
            .addGroup(pnlApplyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(pnlApplyLayout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(lblSidebar)
                    .addContainerGap(436, Short.MAX_VALUE)))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlApply, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlApply, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Cancels the apply recording process and returns to the previous screen
     * @param evt 
     */
    private void btnCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelActionPerformed
        parent.setContentsVisible();
        parent.resetRecordedActions();
        this.dispose();
    }//GEN-LAST:event_btnCancelActionPerformed

    /**
     * Applies the actions recorded on all of the images selected
     * @param evt 
     */
    private void btnApplyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnApplyActionPerformed
        if (!catSelected && !dogSelected && !birdSelected && !rabbitSelected
                && !fishSelected && !turtleSelected) {
            JOptionPane.showMessageDialog(this, "Please select at least one picture.");
        } else {
            parent.applyRecordedActions2(selections);
            parent.setContentsVisible();
            this.dispose();
        }
    }//GEN-LAST:event_btnApplyActionPerformed

    /**
     * Selects the cat image and adds it at the end of the queue
     * @param evt 
     */
    private void btnSelectCatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSelectCatActionPerformed
        catSelected = !catSelected;
        if (catSelected) {
            pnlApplyCat.setBackground(Color.LIGHT_GRAY);
            int i = 0;
            while (i < 6) {
                if (selections[i] == null || selections[i].equals("")) {
                    selections[i] = "cat";
                    return;
                }
                i++;
            }
        } else {
            pnlApplyCat.setBackground(Color.WHITE);
            if (selections[0].equals("cat")) {
                selections[0] = selections[1];
                selections[1] = selections[2];
                selections[2] = selections[3];
                selections[3] = selections[4];
                selections[4] = selections[5];
            }
            selections[5] = "";
        }
    }//GEN-LAST:event_btnSelectCatActionPerformed

    /**
     * Selects the dog image and adds it at the end of the queue
     * @param evt 
     */
    private void btnSelectDogActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSelectDogActionPerformed
        dogSelected = !dogSelected;
        if (dogSelected) {
            pnlApplyDog.setBackground(Color.LIGHT_GRAY);
            int i = 0;
            while (i < 6) {
                if (selections[i] == null || selections[i].equals("")) {
                    selections[i] = "dog";
                    return;
                }
                i++;
            }
        } else {
            pnlApplyDog.setBackground(Color.WHITE);
            if (selections[0].equals("dog")) {
                selections[0] = selections[1];
                selections[1] = selections[2];
                selections[2] = selections[3];
                selections[3] = selections[4];
                selections[4] = selections[5];
            }
            selections[5] = "";
        }
    }//GEN-LAST:event_btnSelectDogActionPerformed

    /**
     * Selects the bird image and adds it at the end of the queue
     * @param evt 
     */
    private void btnInsertBirdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnInsertBirdActionPerformed
        birdSelected = !birdSelected;
        if (birdSelected) {
            pnlApplyBird.setBackground(Color.LIGHT_GRAY);
            int i = 0;
            while (i < 6) {
                if (selections[i] == null || selections[i].equals("")) {
                    selections[i] = "bird";
                    return;
                }
                i++;
            }
        } else {
            pnlApplyBird.setBackground(Color.WHITE);
            if (selections[0].equals("bird")) {
                selections[0] = selections[1];
                selections[1] = selections[2];
                selections[2] = selections[3];
                selections[3] = selections[4];
                selections[4] = selections[5];
            }
            selections[5] = "";
        }
    }//GEN-LAST:event_btnInsertBirdActionPerformed

    /**
     * Selects the rabbit image and adds it at the end of the queue
     * @param evt 
     */
    private void btnSelectRabbitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSelectRabbitActionPerformed
        rabbitSelected = !rabbitSelected;
        if (rabbitSelected) {
            pnlApplyRabbit.setBackground(Color.LIGHT_GRAY);
            int i = 0;
            while (i < 6) {
                if (selections[i] == null || selections[i].equals("")) {
                    selections[i] = "rabbit";
                    return;
                }
                i++;
            }
        } else {
            pnlApplyRabbit.setBackground(Color.WHITE);
            if (selections[0].equals("rabbit")) {
                selections[0] = selections[1];
                selections[1] = selections[2];
                selections[2] = selections[3];
                selections[3] = selections[4];
                selections[4] = selections[5];
            }
            selections[5] = "";
        }
    }//GEN-LAST:event_btnSelectRabbitActionPerformed

    /**
     * Selects the fish image and adds it at the end of the queue
     * @param evt 
     */
    private void btnSelectFishActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSelectFishActionPerformed
        fishSelected = !fishSelected;
        if (fishSelected) {
            pnlApplyFish.setBackground(Color.LIGHT_GRAY);
            int i = 0;
            while (i < 6) {
                if (selections[i] == null || selections[i].equals("")) {
                    selections[i] = "fish";
                    return;
                }
                i++;
            }
        } else {
            pnlApplyFish.setBackground(Color.WHITE);
            if (selections[0].equals("fish")) {
                selections[0] = selections[1];
                selections[1] = selections[2];
                selections[2] = selections[3];
                selections[3] = selections[4];
                selections[4] = selections[5];
            }
            selections[5] = "";
        }
    }//GEN-LAST:event_btnSelectFishActionPerformed

    /**
     * Selects the turtle image and adds it at the end of the queue
     * @param evt 
     */
    private void btnSelectTurtleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSelectTurtleActionPerformed
        turtleSelected = !turtleSelected;
        if (turtleSelected) {
            pnlApplyTurtle.setBackground(Color.LIGHT_GRAY);
            int i = 0;
            while (i < 6) {
                if (selections[i] == null || selections[i].equals("")) {
                    selections[i] = "turtle";
                    return;
                }
                i++;
            }
        } else {
            pnlApplyTurtle.setBackground(Color.WHITE);
            if (selections[0].equals("turtle")) {
                selections[0] = selections[1];
                selections[1] = selections[2];
                selections[2] = selections[3];
                selections[3] = selections[4];
                selections[4] = selections[5];
            }
            selections[5] = "";
        }
    }//GEN-LAST:event_btnSelectTurtleActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnApply;
    private javax.swing.JButton btnCancel;
    private javax.swing.JButton btnInsertBird;
    private javax.swing.JButton btnSelectCat;
    private javax.swing.JButton btnSelectDog;
    private javax.swing.JButton btnSelectFish;
    private javax.swing.JButton btnSelectRabbit;
    private javax.swing.JButton btnSelectTurtle;
    private javax.swing.JLabel lblBirdTitle;
    private javax.swing.JLabel lblCatTitle;
    private javax.swing.JLabel lblConfirmImages;
    private javax.swing.JLabel lblDogTitle;
    private javax.swing.JLabel lblFishTitle;
    private javax.swing.JLabel lblRabbitTitle;
    private javax.swing.JLabel lblSidebar;
    private javax.swing.JLabel lblTurtleTitle;
    private javax.swing.JPanel pnlApply;
    private javax.swing.JPanel pnlApplyBird;
    private javax.swing.JPanel pnlApplyCat;
    private javax.swing.JPanel pnlApplyDog;
    private javax.swing.JPanel pnlApplyFish;
    private javax.swing.JPanel pnlApplyRabbit;
    private javax.swing.JPanel pnlApplyTurtle;
    // End of variables declaration//GEN-END:variables
}
